

# services/bridge-github/package.json
{
 "name": "bridge-github",
 "type": "module",
 "scripts": { "start": "node dist/index.js", "dev": "tsx src/index.ts" },
 "dependencies": {
 "express": "^4.19.0",
 "body-parser": "^1.20.2",
 "nostr-tools": "^2.7.0",
 "jsonwebtoken": "^9.0.2"
 },
 "devDependencies": { "tsx": "^4.7.0", "typescript": "^5.5.0" }
}
# services/bridge-github/src/index.ts (skeleton)
import express from "express";
import crypto from "crypto";
import { createClient } from "@buildbook/sdk";
const app = express(); app.use(express.json());
const relays = (process.env.RELAYS || "").split(",");
const client = createClient(relays);
function verifySignature(req) {
 const sig = req.get("X-Hub-Signature-256");
 const hmac = crypto.createHmac("sha256", process.env.GITHUB_WEBHOOK_SECRET || "");
 const digest = "sha256=" + hmac.update(JSON.stringify(req.body)).digest("hex");
 return sig && crypto.timingSafeEqual(Buffer.from(sig), Buffer.from(digest));
}
app.post("/webhook", async (req, res) => {
 if (!verifySignature(req)) return res.status(401).send("bad signature");
 const event = req.get("X-GitHub-Event");
 // map event -> Nostr (push/pull_request/issue_comment)
 // TODO: transform & client.publish(transformedEvent)
 res.send("ok");
});
app.listen(process.env.PORT || 3001);

